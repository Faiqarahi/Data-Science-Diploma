{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "data = pd.read_csv(\"WC_AT.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Waist</th>\n",
       "      <th>AT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>74.75</td>\n",
       "      <td>25.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>72.60</td>\n",
       "      <td>25.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>81.80</td>\n",
       "      <td>42.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>83.95</td>\n",
       "      <td>42.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>74.65</td>\n",
       "      <td>29.84</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Waist     AT\n",
       "0  74.75  25.72\n",
       "1  72.60  25.89\n",
       "2  81.80  42.60\n",
       "3  83.95  42.80\n",
       "4  74.65  29.84"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 109 entries, 0 to 108\n",
      "Data columns (total 2 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Waist   109 non-null    float64\n",
      " 1   AT      109 non-null    float64\n",
      "dtypes: float64(2)\n",
      "memory usage: 1.8 KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Waist</th>\n",
       "      <th>AT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Waist</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.818558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AT</th>\n",
       "      <td>0.818558</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Waist        AT\n",
       "Waist  1.000000  0.818558\n",
       "AT     0.818558  1.000000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x122a8ad90>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "sns.distplot(data['Waist'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x122d0c6d0>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "sns.distplot(data['AT'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.formula.api as smf\n",
    "model = smf.ols(\"AT~Waist\",data = data).fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x=\"Waist\", y=\"AT\", data=data);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Intercept   -215.981488\n",
       "Waist          3.458859\n",
       "dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Coefficients\n",
    "model.params"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Intercept    -9.909103\n",
      "Waist        14.740376\n",
      "dtype: float64 \n",
      " Intercept    8.197416e-17\n",
      "Waist        1.618607e-27\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "#t and p-Values\n",
    "print(model.tvalues, '\\n', model.pvalues) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.6700368930528429, 0.6669531256981966)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#R squared values\n",
    "(model.rsquared,model.rsquared_adj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Predict for 75, 35 and 90 Waist\n",
    "newdata=pd.Series([75,35,90])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    75\n",
       "1    35\n",
       "2    90\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "newdata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "data_pred=pd.DataFrame(newdata,columns=['Waist'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Waist</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Waist\n",
       "0     75\n",
       "1     35\n",
       "2     90"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    43.432966\n",
       "1   -94.921409\n",
       "2    95.315857\n",
       "dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.predict(data_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "43.52000000000001"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "-215.98+(3.46*75)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-94.88"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "-215.98+(3.46*35)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "95.41999999999999"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "-215.98+(3.46*90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
